[{"C:\\git\\web-editor-frontend\\src\\index.tsx":"1","C:\\git\\web-editor-frontend\\src\\reportWebVitals.ts":"2","C:\\git\\web-editor-frontend\\src\\App.tsx":"3","C:\\git\\web-editor-frontend\\src\\Scene.tsx":"4","C:\\git\\web-editor-frontend\\src\\initialElements.tsx":"5","C:\\git\\web-editor-frontend\\src\\DragNDrop\\Palette.tsx":"6"},{"size":509,"mtime":1615430908071,"results":"7","hashOfConfig":"8"},{"size":463,"mtime":1615431560723,"results":"9","hashOfConfig":"8"},{"size":907,"mtime":1615431261672,"results":"10","hashOfConfig":"8"},{"size":2809,"mtime":1615849810072,"results":"11","hashOfConfig":"8"},{"size":2382,"mtime":1615430908227,"results":"12","hashOfConfig":"8"},{"size":905,"mtime":1615431261745,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"ti88wk",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\git\\web-editor-frontend\\src\\index.tsx",[],["28","29"],"C:\\git\\web-editor-frontend\\src\\reportWebVitals.ts",[],"C:\\git\\web-editor-frontend\\src\\App.tsx",["30","31"],"import React, {useState, DragEvent} from 'react';\nimport ReactFlow, {\n    OnLoadParams,\n    ReactFlowProvider,\n} from 'react-flow-renderer';\n\nimport \"./App.css\"\nimport Palette from './DragNDrop/Palette';\nimport './DragNDrop/dnd.css'\nimport Scene from './Scene';\nimport {initialElements} from \"./initialElements\";\n\nconst OverviewFlow = () => {\n    const [reactFlowInstance, setReactFlowInstance] = useState<OnLoadParams>();\n    const [elements, setElements] = useState(initialElements);\n    return (\n        <div className=\"OverviewFlow\">\n            <ReactFlowProvider>\n                <Scene elements={elements}\n                       setElements={setElements}\n                       reactFlowInstance={reactFlowInstance}\n                       setReactFlowInstance={setReactFlowInstance}/>\n                <Palette/>\n            </ReactFlowProvider>\n        </div>\n    );\n};\n\n\nexport default OverviewFlow;","C:\\git\\web-editor-frontend\\src\\Scene.tsx",["32"],"C:\\git\\web-editor-frontend\\src\\initialElements.tsx",[],"C:\\git\\web-editor-frontend\\src\\DragNDrop\\Palette.tsx",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":1,"column":26,"nodeType":"39","messageId":"40","endLine":1,"endColumn":35},{"ruleId":"37","severity":1,"message":"41","line":2,"column":8,"nodeType":"39","messageId":"40","endLine":2,"endColumn":17},{"ruleId":"37","severity":1,"message":"42","line":31,"column":33,"nodeType":"39","messageId":"40","endLine":31,"endColumn":55},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"@typescript-eslint/no-unused-vars","'DragEvent' is defined but never used.","Identifier","unusedVar","'ReactFlow' is defined but never used.","'setCaptureElementClick' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]